"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[638],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=s(n),m=i,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||a;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9565:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return f}});var r=n(3117),i=n(102),a=(n(7294),n(3905)),o=["components"],c={sidebar_position:2},l="Certificate",s={unversionedId:"learn/uci/certificate",id:"learn/uci/certificate",title:"Certificate",description:"What is a certificate?",source:"@site/docs/learn/uci/certificate.md",sourceDirName:"learn/uci",slug:"/learn/uci/certificate",permalink:"/learn/uci/certificate",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/learn/uci/overview"},next:{title:"Authentication",permalink:"/learn/uci/authentication"}},u=[{value:"What is a certificate?",id:"what-is-a-certificate",children:[],level:2},{value:"Composition",id:"composition",children:[],level:2}],p={toc:u};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"certificate"},"Certificate"),(0,a.kt)("h2",{id:"what-is-a-certificate"},"What is a certificate?"),(0,a.kt)("p",null,"Cross-subnet communication in Topos lies in the submission of ",(0,a.kt)("strong",{parentName:"p"},"certificates"),"\u2014data structures that certify subnet state transitions."),(0,a.kt)("p",null,"It is the role of every subnet to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"identify key participants for certificate creation/propagation;"),(0,a.kt)("li",{parentName:"ul"},"batch transactions in a certificate;"),(0,a.kt)("li",{parentName:"ul"},"include a cryptographic proof of the ",(0,a.kt)("a",{parentName:"li",href:"/learn/uci/state-transitions-validity"},"validity of the state transition"),";"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/learn/uci/authentication"},"authenticate")," the certificate (more precisely the ",(0,a.kt)("a",{parentName:"li",href:"/learn/uci/certificate-lifecycle#propagation-to-the-tce"},"certificate message"),").")),(0,a.kt)("p",null,"Once broadcast and delivered throughout the TCE, the certificate can be verified and the cross-subnet message executed in the receiving subnet."),(0,a.kt)("h2",{id:"composition"},"Composition"),(0,a.kt)("p",null,"A certificate is defined as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"subnet_id")," is the unique identifier of the subnet;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"prev_state_hash")," is the previous subnet state commitment (from the previous certificate);"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"state_hash")," is the current subnet state commitment;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"proof")," is the zkSTARK proof of validity;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"XS_list")," represents the list of included cross-subnet messages;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"proof_XS_list")," is the list of inclusion proofs of cross-subnet messages in the proven\nstate transition;")))}f.isMDXComponent=!0}}]);