"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[454],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),b=i,d=p["".concat(c,".").concat(b)]||p[b]||f[b]||o;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},4714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:2},a="Integration Flow",s={unversionedId:"learn/subnets/integration-flow",id:"learn/subnets/integration-flow",title:"Integration Flow",description:"Registration",source:"@site/docs/learn/subnets/integration-flow.md",sourceDirName:"learn/subnets",slug:"/learn/subnets/integration-flow",permalink:"/learn/subnets/integration-flow",draft:!1,editUrl:"https://github.com/toposware/docs/edit/master/docs/learn/subnets/integration-flow.md",tags:[],version:"current",lastUpdatedBy:"S\xe9bastien Dan",lastUpdatedAt:1682608932,formattedLastUpdatedAt:"Apr 27, 2023",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/learn/subnets/overview"},next:{title:"Topos Subnet",permalink:"/learn/subnets/topos-subnet"}},c={},l=[{value:"Registration",id:"registration",level:2},{value:"Interactions with other subnets",id:"interactions-with-other-subnets",level:2}],u={toc:l},p="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"integration-flow"},"Integration Flow"),(0,i.kt)("h2",{id:"registration"},"Registration"),(0,i.kt)("p",null,"Once built with a compatible DevKit, a subnet registers itself with the ",(0,i.kt)("a",{parentName:"p",href:"/learn/subnets/topos-subnet"},"Topos Subnet"),". The subnet registration consists in the submission of a specific transaction that includes the long-lived public key (for certificate ",(0,i.kt)("a",{parentName:"p",href:"/learn/uci/authentication"},"authentication"),"). Other subnets in the ecosystem gain access to the long-lived public key by accessing the state of the Topos Subnet and can therefore authenticate future certificates."),(0,i.kt)("h2",{id:"interactions-with-other-subnets"},"Interactions with other subnets"),(0,i.kt)("p",null,"Once registered with the Topos Subnet and known to the rest of the Topos ecosystem, a subnet can start interacting with other subnets, i.e., exchanging ",(0,i.kt)("a",{parentName:"p",href:"/learn/subnets/cross-subnet-messages"},"cross-subnet messages"),", by submitting ",(0,i.kt)("a",{parentName:"p",href:"/learn/uci/certificate"},"certificates")," that comply with the specifications defined in the UCI."),(0,i.kt)("p",null,"To do so, subnet participants establish connections with ",(0,i.kt)("a",{parentName:"p",href:"/learn/tce/overview"},"TCE")," nodes, to whom they will submit outgoing certificates and listen for new incoming ones."))}f.isMDXComponent=!0}}]);